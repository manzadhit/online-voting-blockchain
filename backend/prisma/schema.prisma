// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Student {
  id            String     @id @default(cuid())
  name          String
  nim           String     @unique
  faculty       String
  password      String
  votedElections String[]   // Array of election IDs yang sudah dipilih
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Election {
  id         String      @id @default(cuid())
  name       String
  isActive   Boolean     @default(true)
  startDate  DateTime
  endDate    DateTime
  candidates Candidate[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Candidate {
  id              String   @id @default(cuid())
  mainName        String
  mainInitials    String?
  mainFaculty     String
  deputyName      String
  deputyInitials  String?
  deputyFaculty   String
  vision          String   @db.Text
  voteCount       Int      @default(0)
  electionId      String
  election        Election @relation(fields: [electionId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}